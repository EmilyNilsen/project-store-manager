swagger: "2.0"
info:
  description: "Uma solução simples e funcional para quem precisa de ajuda para começar a gerir seu negócio de maneira eficiente!"
  version: "1.0.0"
  title: "HopeAPI Docs"
  contact:
    email: "nilsen.loli.emily@gmail.com"
host: "hope-api-trybe.herokuapp.com"
basePath: "/"

tags:

- name: "Produtos"
  description: "Onde você encontra tudo sobre seus produtos"

- name: "Vendas"
  description: "Onde você encontra tudo sobre suas vendas"

schemes:
- "https"
paths:
  
  /products:
    get:
      tags:
      - "Produtos"
      summary: "Listar todos os produtos"
      operationId: "getAllProducts"
      produces:
      - "application/json"
      
      responses:
        "200":
          description: "Retorna uma lista contendo todos os produtos disponiveis. Modelo de objeto Produto abaixo:"
          schema:
            $ref: "#/definitions/ModeloDeRespostaDeProduto"

    post:
      tags:
      - "Produtos"
      summary: "Adicione um novo produto"
      description: ""
      operationId: "addProducts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto do produto que será adicionado na loja"
        required: true
        schema:
          $ref: "#/definitions/ModeloDeCriacaoDeProduto"
          
      responses:
        "201":
          description: "Retorna o produto criado"
        "409":
          description: "Caso o produto já exista retorna a mensagem: Product already exists"

  /products/{productId}:
    get:
      tags:
      - "Produtos"
      summary: "Encontrar produto pelo ID"
      description: "Retorna apenas um produto"
      operationId: "getProductById"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID do produto desejado"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Retorna o produto selecionado"
          schema:
            $ref: "#/definitions/ModeloDeRespostaDeProduto"
        "404":
          description: "Caso o produto não exista retorna a mensagem: Product not found"
          
    put:
      tags:
      - "Produtos"
      summary: "Atualiza um produto pelo ID"
      description: ""
      operationId: "updateProduct"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID do produto desejado"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto do produto que será atualizado"
        required: true
        schema:
            $ref: "#/definitions/ModeloDeAtualizacaoDeProduto"
      responses:
        "200":
          description: "Retorna o produto atualizado"
          schema:
            $ref: "#/definitions/ModeloDeRespostaDeProduto"
        "404":
          description: "Caso o produto não exista retorna a mensagem: Product not found"
        
    delete:
      tags:
      - "Produtos"
      summary: "Deletar um produto"
      description: ""
      operationId: "deleteProduct"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID do produto a ser deletado"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "204":
          description: "Produto excluído com sucesso"
        "404":
          description: "Caso o produto não exista retorna a mensagem: Product not found"

  /sales:
    get:
      tags:
      - "Vendas"
      summary: "Listar todos as vendas"
      operationId: "getAllSales"
      produces:
      - "application/json"
      
      responses:
        "200":
          description: "Retorna uma lista contendo todos as vendas disponiveis. Modelo de objeto Venda abaixo:"
          schema:
            $ref: "#/definitions/ModeloDeRespostaDeListagemDeVendas"
          
    post:
      tags:
      - "Vendas"
      summary: "Adicione uma nova venda"
      description: ""
      operationId: "addSale"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto da venda realizada pela loja"
        required: true
        schema:
          $ref: "#/definitions/ModeloDeCriacaoDeVenda"
          
      responses:
        "201":
          description: "Retorna a venda que foi cadastrada"
          
    
  
  /sales/{saleId}:
    get:
      tags:
      - "Vendas"
      summary: "Encontrar venda pelo ID"
      description: "Retorna apenas uma venda"
      operationId: "getSaleById"
      produces:
      - "application/json"
      parameters:
      - name: "saleId"
        in: "path"
        description: "ID da venda desejada"
        required: true
        type: "integer"
        format: "int64"
      responses:

        "200":
          description: "Retorna a venda selecionada"
          schema:
            $ref: "#/definitions/ModeloDeRespostaDeVendaUnica"
        "404":
          description: "Caso a venda não exista retorna a mensagem: Sale not found"
    
    put:
        tags:
        - "Vendas"
        summary: "Atualiza uma venda existente pelo ID"
        description: ""
        operationId: "updateSale"
        consumes:
        - "application/json"
        produces:
        - "application/json"
        parameters:
        - name: "saleId"
          in: "path"
          description: "ID do produto desejado"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Objeto da venda que será atualizada"
          required: true
          schema:
            $ref: "#/definitions/ModeloDeAtualizacaoDeVenda"
            
        responses:
          "200":
            description: "Retorna o produto atualizado"

    delete:
      tags:
      - "Vendas"
      summary: "Deletar uma venda"
      description: ""
      operationId: "deleteSale"
      produces:
      - "application/json"
      parameters:
      - name: "saleId"
        in: "path"
        description: "ID da venda a ser deletada"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "204":
          description: "Venda excluída com sucesso"
        "404":
          description: "Caso a venda não exista retorna a mensagem: Sale not found"

definitions:

  ModeloDeCriacaoDeProduto:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Martelo de Thor"
      quantity:
        type: "integer"
        format: "int64"

  ModeloDeRespostaDeProduto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Martelo de Thor"
      quantity:
        type: "integer"
        format: "int64"
  
  ModeloDeAtualizacaoDeProduto:
    type: "object"
    required:
    - "name"
    - "quantity"
    properties:
      name:
        type: "string"
        example: "Martelo de Thor"
      quantity:
        type: "integer"
        format: "int64"
  
  ModeloDeCriacaoDeVenda:
      type: "object"
    properties:
      productId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int64"
  
  ModeloDeRespostaDeVendaUnica:
    type: "object"
    properties:
      date:
        type: "string"
        example: "2022-04-01T04:48:03.000Z"
      productId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int64"
      
  ModeloDeRespostaDeListagemDeVendas:
    type: "object"
    properties:
      
      sale_id:
        type: "integer"
        format: "int64"
      
      date:
        type: "string"
        example: "2022-04-01T04:48:03.000Z"
      
      productId:
        type: "integer"
        format: "int64"
      
      quantity:
        type: "integer"
        format: "int64"
  
  ModeloDeAtualizacaoDeVenda:
    type: "object"
    required:
    - "id"
    - "productId"
    - "quantity"
    properties:
      productId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int64"
